define("tiny_html/plugin",["exports","editor_tiny/loader","editor_tiny/utils","./common","./beautify/beautify-html","./codemirror/codemirror"],(function(_exports,_loader,_utils,_common,_beautifyHtml,_codemirror){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0;
/**
   * Tiny tiny_html for Moodle.
   *
   * @module      tiny_html/plugin
   * @copyright   2023 Matt Porritt <matt.porritt@moodle.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const beautifyOptions={indent_size:2,wrap_line_length:80,unformatted:[]},windowManagerConfig={title:"Source code",size:"large",body:{type:"panel",items:[{type:"htmlpanel",html:'<div id="codeMirrorContainer" style="height: 100%;"></div>'}]},buttons:[{type:"cancel",name:"cancel",text:"Cancel"},{type:"submit",name:"save",text:"Save",primary:!0}],initialData:null,onSubmit:null};var _default=new Promise((async resolve=>{const[tinyMCE,pluginMetadata]=await Promise.all([(0,_loader.getTinyMCE)(),(0,_utils.getPluginMetadata)(_common.component,_common.pluginName)]);tinyMCE.PluginManager.add(_common.pluginName,(editor=>(editor.addCommand("mceCodeEditor",(()=>{const content=editor.getContent({source_view:!0}),beautifiedContent=(0,_beautifyHtml.html_beautify)(content,beautifyOptions);let cmInstance;editor.windowManager.open({...windowManagerConfig,onAction:()=>{const container=document.getElementById("codeMirrorContainer");window.console.log("we are open"),window.console.log(container),cmInstance=new _codemirror.EditorView({state:_codemirror.EditorView.create({doc:beautifiedContent,extensions:[_codemirror.basicSetup,(0,_codemirror.html)()]}),parent:container})},onSubmit:api=>{const cmContent=cmInstance.state.doc.toString();editor.setContent(cmContent,{source_view:!0}),api.close()}})})),pluginMetadata))),resolve(_common.pluginName)}));return _exports.default=_default,_exports.default}));

//# sourceMappingURL=plugin.min.js.map